/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./sankhau/sankhau.gltf --transform --types 
Files: ./sankhau/sankhau.gltf [22.84KB] > C:\Users\zatag\3d-viewer\public\VR\sankhau-transformed.glb [1.49MB] (-6429%)
*/

import * as THREE from 'three'
import React, { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    texture: THREE.Mesh
    KV_LED_1: THREE.Mesh
    KV_LED_2: THREE.Mesh
    KV_LED_3: THREE.Mesh
    ghe: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
    ['KV LED']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Visual Stand']: THREE.MeshStandardMaterial
    PaletteMaterial001: THREE.MeshPhysicalMaterial
  }
  animations: any[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('VR/sankhau-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null} scale={[2, 2, 2]}>
      <mesh geometry={nodes.texture.geometry} material={materials['Material.002']} position={[1.471, 0.176, 1.227]} rotation={[Math.PI / 2, 0, 0]} scale={[0.018, 0.09, 0.018]} />
      <mesh geometry={nodes.ghe.geometry} material={materials.PaletteMaterial001} />
      <mesh geometry={nodes.KV_LED_1.geometry} material={materials['KV LED']} />
      <mesh geometry={nodes.KV_LED_2.geometry} material={materials['Material.001']} />
      <mesh geometry={nodes.KV_LED_3.geometry} material={materials['Visual Stand']} />
    </group>
  )
}

