/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./display_led/display_led.gltf --transform --types 
Files: ./display_led/display_led.gltf [17.29KB] > C:\Users\zatag\3d-viewer\public\VR\display_led-transformed.glb [510.54KB] (-2853%)
*/

import * as THREE from 'three'
import React, { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane011: THREE.Mesh
    Plane002: THREE.Mesh
    Plane005: THREE.Mesh
    Plane007: THREE.Mesh
    Plane009: THREE.Mesh
    Plane012: THREE.Mesh
    Plane001: THREE.Mesh
  }
  materials: {
    LCD02: THREE.MeshStandardMaterial
    LCD01: THREE.MeshStandardMaterial
    LCD03: THREE.MeshStandardMaterial
    LCD04: THREE.MeshStandardMaterial
    LCD05: THREE.MeshStandardMaterial
    LCD06: THREE.MeshStandardMaterial
    Display: THREE.MeshStandardMaterial
  }
  animations: any[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/VR/display_led-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane011.geometry} material={materials.LCD02} position={[-10.376, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane002.geometry} material={materials.LCD01} position={[0.514, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane005.geometry} material={materials.LCD03} position={[11.143, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane007.geometry} material={materials.LCD04} position={[21.672, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane009.geometry} material={materials.LCD05} position={[32.465, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane012.geometry} material={materials.LCD06} position={[43.544, 0.619, -0.029]} />
      <mesh geometry={nodes.Plane001.geometry} material={materials.Display} position={[0.514, 0.619, -0.029]} />
    </group>
  )
}

useGLTF.preload('/VR/display_led-transformed.glb')
