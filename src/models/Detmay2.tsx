/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\detmay_lod.gltf --shadows --types 
*/

import * as THREE from "three";
import React, { JSX, useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useThree, useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    _l2_Decor_Structure: THREE.Mesh;
    _l0_Backdrop_box: THREE.Mesh;
    _l0_Floor: THREE.Mesh;
    _l0_Main_Backdrop: THREE.Mesh;
    Cube001: THREE.Mesh;
    Cube001_1: THREE.Mesh;
    Cube001_2: THREE.Mesh;
    _l1_BP_Banner_left_1: THREE.Mesh;
    _l1_BP_Banner_left_2: THREE.Mesh;
    _l1_BP_Visual_Banner_left_1: THREE.Mesh;
    _l1_BP_Visual_Banner_left_2: THREE.Mesh;
    Box100007: THREE.Mesh;
    Box100007_1: THREE.Mesh;
    _l3_Men_mannequin: THREE.Mesh;
    _l3_Men_mannequin001: THREE.Mesh;
    _l3_Men_mannequin002: THREE.Mesh;
    _l3_Men_mannequin003: THREE.Mesh;
    _l3_Men_mannequin004: THREE.Mesh;
    _l3_Men_mannequin005: THREE.Mesh;
    _l3_Shoes_box: THREE.Mesh;
    vm_v2_054: THREE.Mesh;
    vm_v2_054_1: THREE.Mesh;
    vm_v2_054_2: THREE.Mesh;
    Box100010: THREE.Mesh;
    Box100010_1: THREE.Mesh;
    Box100012: THREE.Mesh;
    Box100012_1: THREE.Mesh;
    Box100012_2: THREE.Mesh;
    _l3_Women_mannequin_box: THREE.Mesh;
    _l3_Women_mannequin_box001: THREE.Mesh;
    _l3_Women_mannequin_box002: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube002_2: THREE.Mesh;
    Cube002_3: THREE.Mesh;
    Cube002_4: THREE.Mesh;
    Cube002_5: THREE.Mesh;
    Cube002_6: THREE.Mesh;
    Cube002_7: THREE.Mesh;
    Cube002_8: THREE.Mesh;
    Cube002_9: THREE.Mesh;
    Cube002_10: THREE.Mesh;
    Cube002_11: THREE.Mesh;
    Cube002_12: THREE.Mesh;
    Cube002_13: THREE.Mesh;
    Cube002_14: THREE.Mesh;
    Cube002_15: THREE.Mesh;
    Cube002_16: THREE.Mesh;
    Cube002_17: THREE.Mesh;
    Cube002_18: THREE.Mesh;
    Cube002_19: THREE.Mesh;
    Cube002_20: THREE.Mesh;
    Cube002_21: THREE.Mesh;
    Cube002_22: THREE.Mesh;
    Cube002_23: THREE.Mesh;
    Cube002_24: THREE.Mesh;
    Cube002_25: THREE.Mesh;
  };
  materials: {
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["LCD06.002"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Inst_Rack_01.002"]: THREE.MeshStandardMaterial;
    adskMatPhysicalMaterial_12: THREE.MeshStandardMaterial;
    ["Inst_Rack_01.001"]: THREE.MeshStandardMaterial;
    ["Inst_Rack_01.004"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Green Lizerd"]: THREE.MeshStandardMaterial;
    ["Fast Gold"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.011"]: THREE.MeshStandardMaterial;
    adskMatPhysicalMaterial_1: THREE.MeshStandardMaterial;
    ["adskMatPhysicalMaterial_10.002"]: THREE.MeshStandardMaterial;
    ["adskMatPhysicalMaterial_6.001"]: THREE.MeshStandardMaterial;
    ["adskMatPhysicalMaterial_9.001"]: THREE.MeshStandardMaterial;
    adskMatPhysicalMaterial_14: THREE.MeshStandardMaterial;
    adskMatPhysicalMaterial_7: THREE.MeshStandardMaterial;
    ["adskMatPhysicalMaterial_10.001"]: THREE.MeshStandardMaterial;
    adskMatPhysicalMaterial_6: THREE.MeshStandardMaterial;
    ["adskMatPhysicalMaterial_1.001"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ["material23.001"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["material0.001"]: THREE.MeshStandardMaterial;
    ["material1.001"]: THREE.MeshStandardMaterial;
    ["material2.001"]: THREE.MeshStandardMaterial;
    ["material3.001"]: THREE.MeshStandardMaterial;
    ["material4.001"]: THREE.MeshStandardMaterial;
    ["material5.001"]: THREE.MeshStandardMaterial;
    ["material6.001"]: THREE.MeshStandardMaterial;
    ["material7.001"]: THREE.MeshStandardMaterial;
    ["material8.001"]: THREE.MeshStandardMaterial;
    ["material9.001"]: THREE.MeshStandardMaterial;
    ["material10.001"]: THREE.MeshStandardMaterial;
    ["material11.001"]: THREE.MeshStandardMaterial;
    ["material12.001"]: THREE.MeshStandardMaterial;
    ["material13.001"]: THREE.MeshStandardMaterial;
    ["material14.001"]: THREE.MeshStandardMaterial;
    ["material15.001"]: THREE.MeshStandardMaterial;
    ["material16.001"]: THREE.MeshStandardMaterial;
    ["material17.001"]: THREE.MeshStandardMaterial;
    ["material18.001"]: THREE.MeshStandardMaterial;
    ["material19.001"]: THREE.MeshStandardMaterial;
    ["material20.001"]: THREE.MeshStandardMaterial;
    ["material21.001"]: THREE.MeshStandardMaterial;
    ["material22.001"]: THREE.MeshStandardMaterial;
  };
  animations: any[];
};

export function Model(
  props: JSX.IntrinsicElements["group"] & {
    onSelect?: (info: { name: string; cost: number; details: string }) => void;
    onSelectHotSpot?: (info: {
      name: string;
      cost: number;
      details: string;
    }) => void;
  }
) {
  const { nodes, materials } = useGLTF(
    "/VR2/detmay/detmay_lod.gltf"
  ) as unknown as GLTFResult;
  const { onSelect, onSelectHotSpot, ...rest } = props;
  const [selectedObject, setSelectedObject] = useState<string | null>(null);

  const { camera } = useThree();
  const [lodLevel, setLodLevel] = useState(0);
  const groupRef = useRef<THREE.Group>(null);
  const prevLodLevel = useRef(lodLevel);
  const glowRef = useRef<THREE.Mesh>(null);
  const time = useRef(0);

  // Create a blue interactive material
  const interactiveMaterial = new THREE.MeshStandardMaterial({
    color: 0x4444ff,
    emissive: 0x2222ff,
    emissiveIntensity: 0.3,
    transparent: true,
    opacity: 0.9,
  });

  // Create glow material
  const glowMaterial = (props: { color: THREE.ColorRepresentation }) =>
    new THREE.MeshBasicMaterial({
      color: props.color || 0x4444ff,
      transparent: true,
      opacity: 0.6,
      side: THREE.DoubleSide,
    });

  // Unload unused geometries and materials
  useEffect(() => {
    if (prevLodLevel.current !== lodLevel) {
      // Unload level 3 if not in use
      if (lodLevel < 3) {
        nodes._l3_Men_mannequin?.geometry?.dispose();
        nodes._l3_Men_mannequin001?.geometry?.dispose();
        nodes._l3_Men_mannequin002?.geometry?.dispose();
        nodes._l3_Men_mannequin003?.geometry?.dispose();
        nodes._l3_Men_mannequin004?.geometry?.dispose();
        nodes._l3_Men_mannequin005?.geometry?.dispose();
        nodes._l3_Shoes_box?.geometry?.dispose();
        nodes.vm_v2_054?.geometry?.dispose();
        nodes.vm_v2_054_1?.geometry?.dispose();
        nodes.vm_v2_054_2?.geometry?.dispose();
        nodes.Box100010?.geometry?.dispose();
        nodes.Box100010_1?.geometry?.dispose();
        nodes.Box100012?.geometry?.dispose();
        nodes.Box100012_1?.geometry?.dispose();
        nodes.Box100012_2?.geometry?.dispose();
        nodes._l3_Women_mannequin_box?.geometry?.dispose();
        nodes._l3_Women_mannequin_box001?.geometry?.dispose();
        nodes._l3_Women_mannequin_box002?.geometry?.dispose();
      }

      // Unload level 2 if not in use
      if (lodLevel < 2) {
        nodes._l2_Decor_Structure?.geometry?.dispose();
        nodes.Cube001?.geometry?.dispose();
        nodes.Cube001_1?.geometry?.dispose();
        nodes.Cube001_2?.geometry?.dispose();
      }

      // Unload level 1 if not in use
      if (lodLevel < 1) {
        nodes._l1_BP_Banner_left_1?.geometry?.dispose();
        nodes._l1_BP_Banner_left_2?.geometry?.dispose();
        nodes._l1_BP_Visual_Banner_left_1?.geometry?.dispose();
        nodes._l1_BP_Visual_Banner_left_2?.geometry?.dispose();
        nodes.Box100007?.geometry?.dispose();
        nodes.Box100007_1?.geometry?.dispose();
      }

      prevLodLevel.current = lodLevel;
    }
  }, [lodLevel, nodes]);

  useFrame(() => {
    if (groupRef.current) {
      const worldPos = new THREE.Vector3();
      groupRef.current.getWorldPosition(worldPos);
      const distance = camera.position.distanceTo(worldPos);
      setLodLevel(
        distance <= 10 ? 3 : distance <= 20 ? 2 : distance <= 30 ? 1 : 0
      );
    }
  });

  // Animation for the glow effect
  useFrame((state, delta) => {
    if (glowRef.current) {
      time.current += delta;
      // Pulsing scale
      const scale = 0.3 + Math.sin(time.current * 2) * 0.05;
      glowRef.current.scale.set(scale, scale, scale);
    }
  });

  return (
    <group ref={groupRef} {...rest} dispose={null}>
      {/* Base level (always visible) */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes._l0_Backdrop_box.geometry}
        material={materials["Material.012"]}
        position={[-0.269, 6.143, -5.377]}
        scale={[1.429, 1.345, 0.414]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes._l0_Floor.geometry}
        material={materials["Material.008"]}
        rotation={[0, -1.571, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes._l0_Main_Backdrop.geometry}
        material={materials["LCD06.002"]}
        position={[-0.362, 5.169, -4.971]}
        scale={[0.738, 0.599, 0.322]}
      />
      {/* Glow effect */}
      <mesh
        ref={glowRef}
        position={[5.886, 1, 3.773]}
        onClick={() => {
          onSelectHotSpot?.({
            name: "HotSpot",
            cost: 120,
            details: "This is a hot spot",
          });
        }}
      >
        <sphereGeometry args={[2, 32, 32]} />
        {/* Interactive indicator light */}
        <pointLight
          position={[0, 0, 0]}
          color={0x00ff00}
          intensity={2}
          distance={1.5}
        />
        <primitive object={glowMaterial({ color: 0x00ff00 })} />
      </mesh>
      <group
        position={[5.886, -0.009, 3.773]}
        rotation={[0, 0.02, 0]}
        scale={[1.003, 2.002, 0.19]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials.Material}
        ></mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials["material23.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_2.geometry}
          material={materials["Material.010"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_3.geometry}
          material={materials["material0.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_4.geometry}
          material={materials["material1.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_5.geometry}
          material={materials["material2.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_6.geometry}
          material={materials["material3.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_7.geometry}
          material={materials["material4.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_8.geometry}
          material={materials["material5.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_9.geometry}
          material={materials["material6.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_10.geometry}
          material={materials["material7.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_11.geometry}
          material={materials["material8.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_12.geometry}
          material={materials["material9.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_13.geometry}
          material={materials["material10.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_14.geometry}
          material={materials["material11.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_15.geometry}
          material={materials["material12.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_16.geometry}
          material={materials["material13.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_17.geometry}
          material={materials["material14.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_18.geometry}
          material={materials["material15.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_19.geometry}
          material={materials["material16.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_20.geometry}
          material={materials["material17.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_21.geometry}
          material={materials["material18.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_22.geometry}
          material={materials["material19.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_23.geometry}
          material={materials["material20.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_24.geometry}
          material={materials["material21.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_25.geometry}
          material={materials["material22.001"]}
        />
      </group>

      {/* Level 1 (visible when distance <= 30) */}
      {lodLevel > 0 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l1_BP_Banner_left_1.geometry}
            material={materials["Inst_Rack_01.001"]}
            position={[-5.118, 0.954, 0.214]}
            rotation={[0, 0.23, 0]}
            scale={[1.129, 1.067, 0.934]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l1_BP_Banner_left_2.geometry}
            material={materials["Inst_Rack_01.004"]}
            position={[4.579, 0.954, 0.183]}
            rotation={[0, -0.238, 0]}
            scale={[1.129, 1.067, 0.934]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l1_BP_Visual_Banner_left_1.geometry}
            material={materials["Material.002"]}
            position={[-5.118, 0.954, 0.214]}
            rotation={[0, 0.23, 0]}
            scale={[1.129, 1.067, 0.934]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l1_BP_Visual_Banner_left_2.geometry}
            material={materials["Material.001"]}
            position={[4.579, 0.954, 0.183]}
            rotation={[0, -0.238, 0]}
            scale={[1.129, 1.067, 0.934]}
          />
        </>
      )}

      {/* Level 2 (visible when distance <= 20) */}
      {lodLevel > 1 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l2_Decor_Structure.geometry}
            material={materials["Material.008"]}
            position={[-5.429, 1.703, -1.07]}
            rotation={[0, 1.571, 0]}
          />
          <group
            position={[-0.204, 1.224, -2.958]}
            scale={[3.36, 1.255, 0.006]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube001.geometry}
              material={materials["Material.004"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube001_1.geometry}
              material={materials["Inst_Rack_01.002"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Cube001_2.geometry}
              material={materials.adskMatPhysicalMaterial_12}
            />
          </group>
        </>
      )}

      {/* Level 3 (visible when distance <= 10) */}
      {lodLevel > 2 && (
        <>
          <mesh
            onClick={(e) => {
              e.stopPropagation();
              onSelect?.({
                name: "Men Mannequin",
                cost: 120,
                details: "A stylish mannequin for display.",
              });
            }}
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin.geometry}
            material={materials["Material.006"]}
            position={[2.225, -0.042, 1.234]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          >
            {/* Glow effect */}
            <mesh ref={glowRef} position={[1.5, 4, -2.3]}>
              <sphereGeometry args={[3, 16, 16]} />
              {/* Interactive indicator light */}
              <pointLight
                position={[0, 0, 0]}
                color={0x4444ff}
                intensity={2}
                distance={1.5}
              />
              <primitive object={glowMaterial({ color: 0x4444ff })} />
            </mesh>
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin001.geometry}
            material={nodes._l3_Men_mannequin001.material}
            position={[2.225, -0.042, 1.234]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin002.geometry}
            material={materials["Material.005"]}
            position={[2.225, -0.042, 1.234]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin003.geometry}
            material={materials["Material.011"]}
            position={[2.225, -0.042, 1.234]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin004.geometry}
            material={materials["Material.005"]}
            position={[2.225, -0.042, 1.234]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Men_mannequin005.geometry}
            material={materials["Material.011"]}
            position={[2.627, 2.055, 1.531]}
            rotation={[Math.PI, -0.987, Math.PI]}
            scale={0.152}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Shoes_box.geometry}
            material={materials.adskMatPhysicalMaterial_1}
            position={[-5.819, 0.554, 2.436]}
            rotation={[-Math.PI / 2, 0, 0.171]}
            scale={[0.002, 0.001, 0.001]}
          />
          <group
            position={[-6.109, 0.248, 3.491]}
            rotation={[-1.383, 0.02, -1.118]}
            scale={[0.043, 0.043, 0.052]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.vm_v2_054.geometry}
              material={materials["adskMatPhysicalMaterial_10.002"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.vm_v2_054_1.geometry}
              material={materials["adskMatPhysicalMaterial_6.001"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.vm_v2_054_2.geometry}
              material={materials["adskMatPhysicalMaterial_9.001"]}
            />
          </group>
          <group
            position={[-3.461, 2.081, 0.825]}
            rotation={[-Math.PI / 2, 0, 1.916]}
            scale={[0.002, 0.001, 0.001]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100010.geometry}
              material={materials.adskMatPhysicalMaterial_14}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100010_1.geometry}
              material={materials.adskMatPhysicalMaterial_12}
            />
          </group>
          <group
            position={[-3.681, 1.067, 2.179]}
            rotation={[-Math.PI / 2, 0, 0.688]}
            scale={[0.002, 0.001, 0.001]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100012.geometry}
              material={materials.adskMatPhysicalMaterial_7}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100012_1.geometry}
              material={materials["adskMatPhysicalMaterial_10.001"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100012_2.geometry}
              material={materials.adskMatPhysicalMaterial_6}
            />
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Women_mannequin_box.geometry}
            material={materials["adskMatPhysicalMaterial_1.001"]}
            position={[-3.494, 0.169, 0.903]}
            rotation={[-Math.PI / 2, 0, 0.291]}
            scale={[0.002, 0.001, 0.001]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Women_mannequin_box001.geometry}
            material={materials.adskMatPhysicalMaterial_1}
            position={[-4.771, 0.687, 2.214]}
            rotation={[-Math.PI / 2, 0, 1.76]}
            scale={[0.002, 0.001, 0.001]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes._l3_Women_mannequin_box002.geometry}
            material={materials.adskMatPhysicalMaterial_1}
            position={[-3.736, 0.28, 1.831]}
            rotation={[-Math.PI / 2, 0, -0.349]}
            scale={[0.002, 0.001, 0.001]}
          />
          <group
            position={[-4.823, 1.601, 2.115]}
            rotation={[-Math.PI / 2, 0, 1.76]}
            scale={[0.002, 0.001, 0.001]}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100007.geometry}
              material={materials["Green Lizerd"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Box100007_1.geometry}
              material={materials["Fast Gold"]}
            />
          </group>
        </>
      )}
    </group>
  );
}

useGLTF.preload("/VR2/detmay/detmay_lod.gltf");
