/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./hall/hall.gltf --transform --types 
Files: ./hall/hall.gltf [56.95KB] > C:\Users\zatag\3d-viewer\public\VR\hall-transformed.glb [1.78MB] (-3020%)
*/

import * as THREE from 'three'
import React, { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    wall001: THREE.Mesh
    Plane003: THREE.Mesh
    Plane005: THREE.Mesh
    Plane010: THREE.Mesh
    Cylinder004: THREE.Mesh
    Cube006: THREE.Mesh
    lamp: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
    Metal_hard: THREE.MeshStandardMaterial
    PaletteMaterial002: THREE.MeshPhysicalMaterial
    PaletteMaterial003: THREE.MeshPhysicalMaterial
    PaletteMaterial004: THREE.MeshPhysicalMaterial
    lightbulb_led: THREE.MeshStandardMaterial
  }
  animations: any[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('VR/hall-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.wall001.geometry} material={materials.PaletteMaterial001} />
      <mesh geometry={nodes.Plane003.geometry} material={materials.Metal_hard} />
      <mesh geometry={nodes.Plane005.geometry} material={materials.PaletteMaterial002} />
      <mesh geometry={nodes.Plane010.geometry} material={materials.PaletteMaterial003} />
      <mesh geometry={nodes.Cylinder004.geometry} material={materials.PaletteMaterial004} />
      <mesh geometry={nodes.Cube006.geometry} material={nodes.Cube006.material} />
      <mesh geometry={nodes.lamp.geometry} material={materials.lightbulb_led} />
    </group>
  )
}

useGLTF.preload('VR/hall-transformed.glb')
